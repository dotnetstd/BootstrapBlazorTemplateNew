@inherits LayoutComponentBase

<BootstrapBlazorRoot>
    <Layout ShowGotoTop="true" ShowFooter="@Options.ShowFooter" SideWidth="0" ShowCollapseBar="@Options.ShowSide"
            IsPage="true" IsFullSide="@Options.FullSide" IsFixedHeader="@Options.FixedHeader" IsFixedFooter="@FixedFooter"
            ShowSplitBar="true" SidebarMinWidth="200" SidebarMaxWidth="350" IsAccordion="@Options.Accordion"
            TabStyle="Options.TabStyle" ShowTabContextMenu="Options.ShowTabRightClickMenu"
            ShowTabInHeader="@Options.ShowTabInHeader" ShowTabExtendButtons="Options.ShowTabExtendButtons"
            ShowToolbar="Options.TabShowToolbar" ShowTabItemClose="Options.TabShowCloseButton"
            TabDefaultUrl="/" UseTabSet="@Options.UseTabSet" IsFixedTabHeader="Options.FixedTab"
            AdditionalAssemblies="new[] { GetType().Assembly }"
            Menus="@Menus" class="@LayoutClassString">
        <Header>
            @if (Options.ShowTabInHeader == false)
            {
                <div class="d-none d-lg-block">
                    <a href="">
                        <span class="company-name">Bootstrap of Blazor</span>
                    </a>
                </div>
                @if (!Options.ShowSide)
                {
                    <Menu Items="@Menus" DisableNavigation="false" />
                }
                <div class="flex-fill"></div>
                <Widget></Widget>
            }
            <Logout ImageUrl="images/Argo-C.png" DisplayName="超级管理员" UserName="Admin">
                <LinkTemplate>
                    <a href="#"><i class="fa-solid fa-suitcase"></i>个人中心</a>
                    <a href="#"><i class="fa-solid fa-cog"></i>设置</a>
                    <a href="#"><i class="fa-solid fa-bell"></i>通知<span class="badge badge-pill badge-success"></span></a>
                    <LogoutLink Url="Logout"></LogoutLink>
                </LinkTemplate>
            </Logout>
            <div class="layout-drawer" @onclick="@(e => IsOpen = !IsOpen)"><i class="fa fa-gears"></i></div>
        </Header>
        <Side>
            <div class="layout-banner">
                <img class="layout-logo" src="../images/logo.png" />
                <div class="layout-title">
                    <span>后台管理</span>
                </div>
            </div>
        </Side>
        <Main>
            <CascadingValue Value="this" IsFixed="true">
                @Body
            </CascadingValue>
        </Main>
        <Footer>
            <div class="text-center flex-fill">
                <a class="page-layout-demo-footer-link" href="https://www.blazor.zone" target="_blank">Bootstrap Blazor</a>
            </div>
        </Footer>
        <NotFound>
            <Alert Icon="fa-regular fa-envelope" Color="Color.Warning">Sorry, there's nothing at this address!</Alert>
        </NotFound>
    </Layout>

    <Drawer Placement="Placement.Right" @bind-IsOpen="@IsOpen" IsBackdrop="true">
        <div class="layout-drawer-body">
            <div class="row">
                <div class="col">
                    <div class="btn btn-warning w-100" @onclick="DeleSettingAsync">恢复默认</div>
                </div>
                <div class="col">
                    <div class="btn btn-info w-100" @onclick="SaveSettingAsync">保存设置</div>
                </div>
                <div class="col">
                    <div class="btn btn-secondary w-100" @onclick="@(e => IsOpen = false)">取消</div>
                </div>
            </div>

            <GroupBox Title="主题配色">
                <div class="row">
                    <div class="col-2">
                        <span class="color color1" @onclick="@(e => Options.Theme = "color1")"></span>
                    </div>
                    <div class="col-2">
                        <span class="color color2" @onclick="@(e => Options.Theme = "color2")"></span>
                    </div>
                    <div class="col-2">
                        <span class="color color3" @onclick="@(e => Options.Theme = "color3")"></span>
                    </div>
                    <div class="col-2">
                        <span class="color color4" @onclick="@(e => Options.Theme = "color4")"></span>
                    </div>
                    <div class="col-2">
                        <span class="color color5" @onclick="@(e => Options.Theme = "color5")"></span>
                    </div>
                    <div class="col-2">
                        <span class="color color6" @onclick="@(e => Options.Theme = "color6")"></span>
                    </div>
                </div>
            </GroupBox>
            
            <GroupBox Title="固定调整">
                <div class="d-none d-xl-block">
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@Options.ShowSide" OnColor="@Color.Success" OffColor="@Color.Secondary"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>显示则边栏</span>
                        </div>
                    </div>
                </div>
                @if (Options.ShowSide)
                {
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@Options.Accordion" OnColor="@Color.Success" OffColor="@Color.Info"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>手风琴菜单</span>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-6 d-flex align-items-center">
                        <Switch @bind-Value="@Options.UseTabSet" OnColor="@Color.Success" OffColor="@Color.Primary"></Switch>
                    </div>
                    <div class="col-6 text-right">
                        <span>@(Options.UseTabSet ? "多标签" : "单页显示")</span>
                    </div>
                </div>
                @if (!Options.FixedTab || !Options.UseTabSet)
                {
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@Options.FixedHeader" OnColor="@Color.Success" OffColor="@Color.Warning"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>固定页头</span>
                        </div>
                    </div>
                }
                @if (Options.UseTabSet)
                {
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@Options.FixedTab" OnValueChanged="FixedTabChange" OnColor="@Color.Success" OffColor="@Color.Danger"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>固定Tab</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@Options.TabShowCloseButton" OnColor="@Color.Success" OffColor="@Color.Primary"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>Tab关闭按钮</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@Options.TabShowToolbar" OnColor="@Color.Success" OffColor="@Color.Primary"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>Tab右边按钮</span>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-6 d-flex align-items-center">
                        <Switch @bind-Value="@Options.ShowFooter" OnColor="@Color.Success" OffColor="@Color.Primary"></Switch>
                    </div>
                    <div class="col-6 text-right">
                        <span>显示页脚</span>
                    </div>
                </div>
                @if (Options.ShowFooter && !(Options.UseTabSet && Options.FixedTab))
                {
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@Options.FixedFooter" OnColor="@Color.Success" OffColor="@Color.Info"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>固定页脚</span>
                        </div>
                    </div>
                }
                @* <div class="row">
                    <div class="col-6">
                        <Switch @bind-Value="@Options.ShowTabInHeader" OnColor="@Color.Success"></Switch>
                    </div>
                    <div class="col-6">
                        <span class="cell-label">@(Options.ShowTabInHeader ? "顶栏标签-🤔" : "正常标签")</span>
                    </div>
                </div> *@
            </GroupBox>

            @if (Options.ShowSide)
            {
                <GroupBox Title="布局调整">
                    <div class="row">
                        <div class="col-6">
                            <div class="layout-item @(Options.FullSide ? "active d-flex" : "d-flex")" @onclick="@(e => Options.FullSide = true)" data-toggle="tooltip" title="左右结构">
                                <div class="layout-left d-flex flex-column">
                                    <div class="layout-left-header"></div>
                                    <div class="layout-left-body flex-fill"></div>
                                </div>
                                <div class="layout-right d-flex flex-column flex-fill">
                                    <div class="layout-right-header"></div>
                                    <div class="layout-right-body flex-fill"></div>
                                    <div class="layout-right-footer"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="layout-item flex-column @(Options.FullSide ? "d-flex" : "active d-flex")" @onclick="@(e => Options.FullSide = false)" data-toggle="tooltip" title="上下结构">
                                <div class="layout-top">
                                </div>
                                <div class="layout-body d-flex flex-fill">
                                    <div class="layout-left">
                                    </div>
                                    <div class="layout-right flex-fill">
                                    </div>
                                </div>
                                <div class="layout-footer">
                                </div>
                            </div>
                        </div>
                    </div>
                </GroupBox>
            }

            @* <GroupBox Title="默认每页显示数据">
                <div class="row g-3 form-inline form-inline-end">
                    <div class="col-4">
                        <label class="form-label">每页数量：</label>
                    </div>
                    <div class="col-8">
                        <BootstrapInputNumber @bind-Value="@Options.Pages" Min="1" Max="100" class="text-center" ShowButton="true" Color="Color.Success" />
                    </div>
                </div>
            </GroupBox> *@
            <br />
            <Alert Icon="fa-solid fa-triangle-exclamation" Color="Color.Warning" ShowBar="true" class="text-center">
                此设置只针对当前浏览器！
            </Alert>
        </div>
    </Drawer>
</BootstrapBlazorRoot>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private LayoutOptions Options { get; set; } = new();

    bool FixedFooter => Options.ShowFooter && Options.FixedFooter;

    private string? LayoutClassString => CssBuilder.Default()
        .AddClass(Options.Theme)
        .AddClass("is-fixed-tab", Options.FixedTab)
        .AddClass("is-show-side", !Options.ShowSide)
        .Build();

    private bool IsOpen { get; set; }

    private List<MenuItem>? Menus { get; set; }

    /// <summary>
    /// OnInitialized 方法
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        Menus = GetIconSideMenuItems();
        var op = await localStore.GetValueAsync<LayoutOptions>("LayoutSetting");
        if (op is not null)
            Options = op;
    }
    private async Task SaveSettingAsync()
    {
        await localStore.SetAsync("LayoutSetting", Options);
        IsOpen = false;
    }
    private async Task DeleSettingAsync()
    {
        Options = new LayoutOptions();
        await localStore.DeleteAsync("LayoutSetting");
        IsOpen = false;
    }
    private Task FixedTabChange(bool val)
    {
        if (val)
        {
            Options.FixedHeader = Options.FixedFooter = val;
        }
        return Task.CompletedTask;
    }
    private static List<MenuItem> GetIconSideMenuItems()
    {
        var menus = new List<MenuItem>
        {
            new() { Text = "GitHub", Icon = "fa-brands fa-github", Url = "https://github.com/movieliang/BootstrapBlazorTemplate" },
            new() { Text = "Index", Icon = "fa-solid fa-fw fa-home text-success", Url = "/" , Match = NavLinkMatch.All},
            new() { Text = "Counter", Icon = "fa-solid fa-fw fa-check-square text-warning", Url = "/counter" },
            new() { Text = "Example", Icon = "fa-solid fa-fw fa-database text-primary",
                Items = [
                    new() { Text = "Weather", Icon = "fa-solid fa-fw fa-pen-to-square text-danger", Url = "/weather" },
                    new() { Text = "Table", Icon = "fa-solid fa-fw fa-table text-info", Url = "/table" },
                    new() { Text = "花名册", Icon = "fa-solid fa-fw fa-users text-success", Url = "/users" }
                ]
            },
            new() { Text = "通用页面", Icon = "fas fa-money-check-dollar text-warning",
                Items = [
                    new() { Text = "Login", Icon = "fas fa-user-group text-info", Url = "/Login" },
                    new() { Text = "Logout", Icon = "fa-solid fa-list-ul text-primary", Url = "/Logout" },
                    new() { Text = "Online", Icon = "fas fa-user-group text-success", Url = "/Online" },
                    new() { Text = "Error", Icon = "fa-solid fa-list-ul text-danger", Url = "/Error" },
                    new() { Text = "NotFound", Icon = "fa-solid fa-ban text-warning", Url = "/NotFound?Message=Not Found!" }
                ]
            },
            new() { Text = "Favorite", Icon = "fa-solid fa-fw fa-pen-to-square text-danger",
                Items = [
                    new() { Text = "Bootstrap Blazor", Icon = "fa-brands fa-bootstrap text-info", Url = "https://www.blazor.zone/" },
                    new() { Text = "Icons", Icon = "fa-solid fa-fw fa-flag text-success", Url = "https://fontawesome.com/icons" }
                ]
            }
        };

        return menus;
    }

    private Task OnSideChanged(bool v)
    {
        Options.FullSide = v;
        StateHasChanged();
        return Task.CompletedTask;
    }
}
